Test file for the function `matrix_divided` in the module `2-matrix_divided`

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[2, 4, 6], [2, 4, 8], [2, 4, 16]], 2)
[[1.0, 2.0, 3.0], [1.0, 2.0, 4.0], [1.0, 2.0, 8.0]]
>>> matrix_divided([[2.55, 4.924, 3]], 3.2)
[[0.8, 1.54, 0.94]]
>>> matrix_divided([[2, 4, 6], [2, 4, 8], [2, 4]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[2, 4, 6], [2, 4, 8], [2, 4, 16]], 'hello')
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[2, 4, 6], [2, 4, 8]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided(2, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([12, 30, -4], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided("hello", 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
